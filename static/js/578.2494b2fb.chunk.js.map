{"version":3,"file":"static/js/578.2494b2fb.chunk.js","mappings":"iNAUA,MAqBA,EArBkCA,IAA8B,IAA7B,GAAEC,EAAE,KAAEC,EAAI,UAAEC,GAAWH,EACxD,MAAM,WAAEI,EAAU,WAAEC,IAAeC,EAAAA,EAAAA,MAEnC,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAW,OAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,KAAK,WACLC,QAASV,EACTW,SAAUA,IAAMV,EAAWH,GAAIQ,UAE/BC,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEC,eAAgBb,EAAY,eAAiB,QAASM,SAClEP,OAGLQ,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CAACL,KAAK,OAAOM,QAASA,IAAMb,EAAWJ,GAAIQ,UAChDC,EAAAA,EAAAA,KAACS,EAAAA,EAAc,QAEd,ECfT,EAJoDnB,IAAkB,IAAjB,QAAEoB,GAASpB,EAC9D,OAAOU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAAEW,GAAc,EC6CzD,EA3C2BC,KACzB,MAAM,MAAEC,EAAK,OAAEC,EAAM,UAAEC,EAAS,SAAEC,IAAanB,EAAAA,EAAAA,MACzCoB,EAAqB,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUE,OACvBC,EACJF,EAAa,GAAMA,EAAaF,GAAaE,EAAc,IAAM,EAKnE,IAAIG,EAAAA,EAAAA,GAAQP,GAAQ,CAClB,IAAIQ,EAAgB,GACpB,OAAQP,GACN,IAAK,SACHO,EAAgB,4BAChB,MACF,IAAK,YACHA,EAAgB,+BAChB,MACF,QACEA,EAAgB,gCAGpB,OAAOpB,EAAAA,EAAAA,KAACqB,EAAa,CAACX,QAASU,GACjC,CAEA,OACEvB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SACjBa,EAAMU,KAAKC,IACVvB,EAAAA,EAAAA,KAACwB,EAAQ,IAAmBD,GAAbA,EAAKhC,SAGxBS,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEoB,UAAW,IAAK1B,UAC5BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAQ,CACPxB,KAAK,OACLyB,QAAST,EACTU,OAASD,GA/BiBA,IACzB,GAAGE,KAAKC,MAAMH,mBAAmCb,SAA+B,IAAdA,EAAkB,IAAM,WA8BtEiB,CAAyBJ,SAG9C,C","sources":["components/Todo/TodoItem/TodoItem.tsx","components/NoDataMessage/NoDataMessage.tsx","components/Todo/TodoList/TodoList.tsx"],"sourcesContent":["import React from 'react'\nimport { Checkbox, Button } from 'antd'\nimport { DeleteOutlined } from '@ant-design/icons'\n\nimport { ITodo } from 'Types/Todo'\n\nimport { useTodos } from 'context/TodoContext'\n\nimport './styles.css'\n\nconst TodoItem: React.FC<ITodo> = ({ id, text, completed }) => {\n  const { toggleTodo, deleteTodo } = useTodos()\n\n  return (\n    <li className={'item'}>\n      <Checkbox\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => toggleTodo(id)}\n      >\n        <span style={{ textDecoration: completed ? 'line-through' : 'none' }}>\n          {text}\n        </span>\n      </Checkbox>\n      <Button type=\"link\" onClick={() => deleteTodo(id)}>\n        <DeleteOutlined />\n      </Button>\n    </li>\n  )\n}\n\nexport default TodoItem\n","import React from 'react'\n\nimport './styles.css'\n\ninterface NoDataMessageProps {\n  message: string\n}\n\nconst NoDataMessage: React.FC<NoDataMessageProps> = ({ message }) => {\n  return <div className=\"no-data-message\">{message}</div>\n}\n\nexport default NoDataMessage\n","import React from 'react'\nimport { isEmpty } from 'ramda'\nimport { Progress } from 'antd'\n\nimport { useTodos } from 'context/TodoContext'\n\nimport TodoItem from 'components/Todo/TodoItem'\nimport NoDataMessage from 'components/NoDataMessage'\n\nimport './styles.css'\n\nconst TodoList: React.FC = () => {\n  const { todos, filter, itemsLeft, allTodos } = useTodos()\n  const totalTasks = allTodos?.length\n  const percentCompleted =\n    totalTasks > 0 ? ((totalTasks - itemsLeft) / totalTasks) * 100 : 0\n  const getCompletedTasksMessage = (percent: number | undefined) => {\n    return `${Math.round(percent as number)} % completed (${itemsLeft} task${itemsLeft !== 1 ? 's' : ''} left)`\n  }\n\n  if (isEmpty(todos)) {\n    let noDataMessage = ''\n    switch (filter) {\n      case 'active':\n        noDataMessage = 'There are no active tasks'\n        break\n      case 'completed':\n        noDataMessage = 'There are no completed tasks'\n        break\n      default:\n        noDataMessage = 'Tasks have not yet been added'\n    }\n\n    return <NoDataMessage message={noDataMessage} />\n  }\n\n  return (\n    <div>\n      <ul className=\"list\">\n        {todos.map((todo) => (\n          <TodoItem key={todo.id} {...todo} />\n        ))}\n      </ul>\n      <div style={{ marginTop: 16 }}>\n        <Progress\n          type=\"line\"\n          percent={percentCompleted}\n          format={(percent) => getCompletedTasksMessage(percent)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default TodoList\n"],"names":["_ref","id","text","completed","toggleTodo","deleteTodo","useTodos","_jsxs","className","children","_jsx","Checkbox","type","checked","onChange","style","textDecoration","Button","onClick","DeleteOutlined","message","TodoList","todos","filter","itemsLeft","allTodos","totalTasks","length","percentCompleted","isEmpty","noDataMessage","NoDataMessage","map","todo","TodoItem","marginTop","Progress","percent","format","Math","round","getCompletedTasksMessage"],"sourceRoot":""}